[
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "wave",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wave",
        "description": "wave",
        "detail": "wave",
        "documentation": {}
    },
    {
        "label": "pygame",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pygame",
        "description": "pygame",
        "detail": "pygame",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "math",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "math",
        "description": "math",
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "constants",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "constants",
        "description": "constants",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WIDTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEIGHT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLACK",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WIDTH",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "HEIGHT",
        "importPath": "constants",
        "description": "constants",
        "isExtraImport": true,
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "Whitespace",
        "importPath": "tokenize",
        "description": "tokenize",
        "isExtraImport": true,
        "detail": "tokenize",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "rumia",
        "importPath": "baddies.enemy",
        "description": "baddies.enemy",
        "isExtraImport": true,
        "detail": "baddies.enemy",
        "documentation": {}
    },
    {
        "label": "rumia",
        "importPath": "baddies.enemy",
        "description": "baddies.enemy",
        "isExtraImport": true,
        "detail": "baddies.enemy",
        "documentation": {}
    },
    {
        "label": "rumia",
        "importPath": "baddies.enemy",
        "description": "baddies.enemy",
        "isExtraImport": true,
        "detail": "baddies.enemy",
        "documentation": {}
    },
    {
        "label": "rumia",
        "importPath": "baddies.enemy",
        "description": "baddies.enemy",
        "isExtraImport": true,
        "detail": "baddies.enemy",
        "documentation": {}
    },
    {
        "label": "spaceship",
        "importPath": "player",
        "description": "player",
        "isExtraImport": true,
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "spaceship",
        "importPath": "player",
        "description": "player",
        "isExtraImport": true,
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "boss_hit",
        "importPath": "hit_register",
        "description": "hit_register",
        "isExtraImport": true,
        "detail": "hit_register",
        "documentation": {}
    },
    {
        "label": "player_hit",
        "importPath": "hit_register",
        "description": "hit_register",
        "isExtraImport": true,
        "detail": "hit_register",
        "documentation": {}
    },
    {
        "label": "ppause",
        "importPath": "ui.pause",
        "description": "ui.pause",
        "isExtraImport": true,
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "mmenu",
        "importPath": "ui.menu",
        "description": "ui.menu",
        "isExtraImport": true,
        "detail": "ui.menu",
        "documentation": {}
    },
    {
        "label": "rumia",
        "kind": 6,
        "importPath": "baddies.enemy",
        "description": "baddies.enemy",
        "peekOfCode": "class rumia:\n    def __init__(self, player_ref):\n        super().__init__()\n        self.player = player_ref\n        kill_sound_path = os.path.join(os.path.dirname(os.path.dirname(__file__)), \"killsound.wav\")\n        self.kill_sound = kill_sound_path\n        self.image_path = os.path.join(os.path.dirname(__file__), \"rumia.png\")\n        self.image = pygame.image.load(self.image_path)\n        self.image = pygame.transform.scale(self.image, (150, 150))\n        self.rumia_rect = self.image.get_rect()",
        "detail": "baddies.enemy",
        "documentation": {}
    },
    {
        "label": "mmenu",
        "kind": 6,
        "importPath": "ui.menu",
        "description": "ui.menu",
        "peekOfCode": "class mmenu:\n    def __init__(self):\n        self.menu = True\n        self.font = pygame.font.SysFont(None, 60)\n        self.pause_background_image = pygame.image.load(\"textures/menu_background.jpg\")\n        self.pause_background_image = pygame.transform.scale(\n            menu_background_image,\n            (constants.WIDTH, constants.HEIGHT)\n            )\n    def run(self, screen, clock):",
        "detail": "ui.menu",
        "documentation": {}
    },
    {
        "label": "menu_background_image",
        "kind": 5,
        "importPath": "ui.menu",
        "description": "ui.menu",
        "peekOfCode": "menu_background_image = pygame.image.load(\"textures/menu_background.jpg\")\nmenu_background_image = pygame.transform.scale(\n    menu_background_image,\n      (constants.WIDTH, constants.HEIGHT)\n      )\nclass mmenu:\n    def __init__(self):\n        self.menu = True\n        self.font = pygame.font.SysFont(None, 60)\n        self.pause_background_image = pygame.image.load(\"textures/menu_background.jpg\")",
        "detail": "ui.menu",
        "documentation": {}
    },
    {
        "label": "menu_background_image",
        "kind": 5,
        "importPath": "ui.menu",
        "description": "ui.menu",
        "peekOfCode": "menu_background_image = pygame.transform.scale(\n    menu_background_image,\n      (constants.WIDTH, constants.HEIGHT)\n      )\nclass mmenu:\n    def __init__(self):\n        self.menu = True\n        self.font = pygame.font.SysFont(None, 60)\n        self.pause_background_image = pygame.image.load(\"textures/menu_background.jpg\")\n        self.pause_background_image = pygame.transform.scale(",
        "detail": "ui.menu",
        "documentation": {}
    },
    {
        "label": "ppause",
        "kind": 6,
        "importPath": "ui.pause",
        "description": "ui.pause",
        "peekOfCode": "class ppause:\n    def __init__(self):\n        self.paused = False\n        self.menu = False\n        self.font = pygame.font.SysFont(None, 60)\n        self.pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\n        self.pause_background_image = pygame.transform.scale(\n            pause_background_image,\n            (constants.WIDTH, constants.HEIGHT)\n            )",
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "pause_background_image",
        "kind": 5,
        "importPath": "ui.pause",
        "description": "ui.pause",
        "peekOfCode": "pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\npause_background_image = pygame.transform.scale(\n    pause_background_image,\n      (constants.WIDTH, constants.HEIGHT)\n      )\n#AN IDEA I WILL IMPLEMENT LATER\n#screen_size = screen.get_size() #big idea that i will apply to others\n#pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\n#pause_background_image = pygame.transform.scale(\n#    pause_background_image,",
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "pause_background_image",
        "kind": 5,
        "importPath": "ui.pause",
        "description": "ui.pause",
        "peekOfCode": "pause_background_image = pygame.transform.scale(\n    pause_background_image,\n      (constants.WIDTH, constants.HEIGHT)\n      )\n#AN IDEA I WILL IMPLEMENT LATER\n#screen_size = screen.get_size() #big idea that i will apply to others\n#pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\n#pause_background_image = pygame.transform.scale(\n#    pause_background_image,\n#      screen_size)",
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "#screen_size",
        "kind": 5,
        "importPath": "ui.pause",
        "description": "ui.pause",
        "peekOfCode": "#screen_size = screen.get_size() #big idea that i will apply to others\n#pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\n#pause_background_image = pygame.transform.scale(\n#    pause_background_image,\n#      screen_size)\nclass ppause:\n    def __init__(self):\n        self.paused = False\n        self.menu = False\n        self.font = pygame.font.SysFont(None, 60)",
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "#pause_background_image",
        "kind": 5,
        "importPath": "ui.pause",
        "description": "ui.pause",
        "peekOfCode": "#pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\n#pause_background_image = pygame.transform.scale(\n#    pause_background_image,\n#      screen_size)\nclass ppause:\n    def __init__(self):\n        self.paused = False\n        self.menu = False\n        self.font = pygame.font.SysFont(None, 60)\n        self.pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")",
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "#pause_background_image",
        "kind": 5,
        "importPath": "ui.pause",
        "description": "ui.pause",
        "peekOfCode": "#pause_background_image = pygame.transform.scale(\n#    pause_background_image,\n#      screen_size)\nclass ppause:\n    def __init__(self):\n        self.paused = False\n        self.menu = False\n        self.font = pygame.font.SysFont(None, 60)\n        self.pause_background_image = pygame.image.load(\"textures/pause_background.jpg\")\n        self.pause_background_image = pygame.transform.scale(",
        "detail": "ui.pause",
        "documentation": {}
    },
    {
        "label": "RED",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "RED = (255, 0, 0)\nWHITE = (255, 255, 255)\nBLACK = (0, 0, 0)\nGREEN = (0, 200, 0)\nLIGHT_GREEN = (100, 255, 100)\nLIGHT_RED = (255, 100, 100)",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "WHITE",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "WHITE = (255, 255, 255)\nBLACK = (0, 0, 0)\nGREEN = (0, 200, 0)\nLIGHT_GREEN = (100, 255, 100)\nLIGHT_RED = (255, 100, 100)",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "BLACK",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "BLACK = (0, 0, 0)\nGREEN = (0, 200, 0)\nLIGHT_GREEN = (100, 255, 100)\nLIGHT_RED = (255, 100, 100)",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "GREEN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "GREEN = (0, 200, 0)\nLIGHT_GREEN = (100, 255, 100)\nLIGHT_RED = (255, 100, 100)",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LIGHT_GREEN",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LIGHT_GREEN = (100, 255, 100)\nLIGHT_RED = (255, 100, 100)",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "LIGHT_RED",
        "kind": 5,
        "importPath": "constants",
        "description": "constants",
        "peekOfCode": "LIGHT_RED = (255, 100, 100)",
        "detail": "constants",
        "documentation": {}
    },
    {
        "label": "player_hit",
        "kind": 2,
        "importPath": "hit_register",
        "description": "hit_register",
        "peekOfCode": "def player_hit(bullets, target_rect, take_hit):\n    for bullet in bullets:\n        bullet_rect = pygame.Rect(bullet[\"pos\"][0], bullet[\"pos\"][1], 5, 5)\n        if bullet_rect.colliderect(target_rect):\n            take_hit()\ndef boss_hit(fires, spaceship_rect):\n    for fire in fires:\n        fire_rect = pygame.Rect(fire[\"pos\"][0], fire[\"pos\"][1], 5, 5)",
        "detail": "hit_register",
        "documentation": {}
    },
    {
        "label": "boss_hit",
        "kind": 2,
        "importPath": "hit_register",
        "description": "hit_register",
        "peekOfCode": "def boss_hit(fires, spaceship_rect):\n    for fire in fires:\n        fire_rect = pygame.Rect(fire[\"pos\"][0], fire[\"pos\"][1], 5, 5)",
        "detail": "hit_register",
        "documentation": {}
    },
    {
        "label": "boss",
        "kind": 5,
        "importPath": "hit_register",
        "description": "hit_register",
        "peekOfCode": "boss = rumia\ndef player_hit(bullets, target_rect, take_hit):\n    for bullet in bullets:\n        bullet_rect = pygame.Rect(bullet[\"pos\"][0], bullet[\"pos\"][1], 5, 5)\n        if bullet_rect.colliderect(target_rect):\n            take_hit()\ndef boss_hit(fires, spaceship_rect):\n    for fire in fires:\n        fire_rect = pygame.Rect(fire[\"pos\"][0], fire[\"pos\"][1], 5, 5)",
        "detail": "hit_register",
        "documentation": {}
    },
    {
        "label": "screen",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "screen = pygame.display.set_mode((WIDTH, HEIGHT))\npygame.display.set_caption(\"will it work tho\")\n# background image\nbackground_image = pygame.image.load(\"textures/background.jpg\")\nbackground_image = pygame.transform.scale(background_image, (WIDTH, HEIGHT))\n#player variable and other variables from files\nx = 100\ny = 100\nplayer = spaceship(x, y)\nenemies = []",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "background_image",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "background_image = pygame.image.load(\"textures/background.jpg\")\nbackground_image = pygame.transform.scale(background_image, (WIDTH, HEIGHT))\n#player variable and other variables from files\nx = 100\ny = 100\nplayer = spaceship(x, y)\nenemies = []\nenemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "background_image",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "background_image = pygame.transform.scale(background_image, (WIDTH, HEIGHT))\n#player variable and other variables from files\nx = 100\ny = 100\nplayer = spaceship(x, y)\nenemies = []\nenemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "x",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "x = 100\ny = 100\nplayer = spaceship(x, y)\nenemies = []\nenemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "y",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "y = 100\nplayer = spaceship(x, y)\nenemies = []\nenemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "player",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "player = spaceship(x, y)\nenemies = []\nenemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "enemies",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "enemies = []\nenemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it\nmmmenu = mmenu()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "enemy_spawn_timer",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "enemy_spawn_timer = 0\nenemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it\nmmmenu = mmenu()\npause = ppause()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "enemy_spawn_interval",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "enemy_spawn_interval = 2000  # spawn every 2 seconds\nenemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it\nmmmenu = mmenu()\npause = ppause()\nmmmenu.run(screen, clock)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "enemies_per_wave",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "enemies_per_wave = 3\n# fps counter\nclock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it\nmmmenu = mmenu()\npause = ppause()\nmmmenu.run(screen, clock)\nin_menu = True",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "clock",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "clock = pygame.time.Clock()\npygame.font.init()\nfont = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it\nmmmenu = mmenu()\npause = ppause()\nmmmenu.run(screen, clock)\nin_menu = True\nrunning = True\nwhile running:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "font",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "font = pygame.font.Font(None, 36)\n#pause menu, didnt know where to put it\nmmmenu = mmenu()\npause = ppause()\nmmmenu.run(screen, clock)\nin_menu = True\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "mmmenu",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "mmmenu = mmenu()\npause = ppause()\nmmmenu.run(screen, clock)\nin_menu = True\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n        if not in_menu and not pause.paused:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "pause",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "pause = ppause()\nmmmenu.run(screen, clock)\nin_menu = True\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n        if not in_menu and not pause.paused:\n            pause.pause_toggle(event)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "in_menu",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "in_menu = True\nrunning = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n        if not in_menu and not pause.paused:\n            pause.pause_toggle(event)\n    if in_menu:\n        mmmenu.run(screen, clock)",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "running",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "running = True\nwhile running:\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            running = False\n        if not in_menu and not pause.paused:\n            pause.pause_toggle(event)\n    if in_menu:\n        mmmenu.run(screen, clock)\n        in_menu = False",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "spaceship",
        "kind": 6,
        "importPath": "player",
        "description": "player",
        "peekOfCode": "class spaceship:\n    def __init__(self, x, y):\n        super().__init__()\n        self.rect = pygame.Rect(x, y, 50, 50)\n        self.spaceship_image = pygame.image.load(\"textures/spaceship.png\")\n        self.spaceship_image = pygame.transform.scale(self.spaceship_image, (50, 50))\n        self.spaceship_rect = self.spaceship_image.get_rect()\n        self.spaceship_rect.center = (WIDTH // 2, HEIGHT // 2)\n        self.bullet_speed = 25\n        self.bullets = []",
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "screen",
        "kind": 5,
        "importPath": "player",
        "description": "player",
        "peekOfCode": "screen = pygame.display.set_mode((WIDTH, HEIGHT))\nkeys_pressed = pygame.key.get_pressed\nenemy = rumia\nclass spaceship:\n    def __init__(self, x, y):\n        super().__init__()\n        self.rect = pygame.Rect(x, y, 50, 50)\n        self.spaceship_image = pygame.image.load(\"textures/spaceship.png\")\n        self.spaceship_image = pygame.transform.scale(self.spaceship_image, (50, 50))\n        self.spaceship_rect = self.spaceship_image.get_rect()",
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "keys_pressed",
        "kind": 5,
        "importPath": "player",
        "description": "player",
        "peekOfCode": "keys_pressed = pygame.key.get_pressed\nenemy = rumia\nclass spaceship:\n    def __init__(self, x, y):\n        super().__init__()\n        self.rect = pygame.Rect(x, y, 50, 50)\n        self.spaceship_image = pygame.image.load(\"textures/spaceship.png\")\n        self.spaceship_image = pygame.transform.scale(self.spaceship_image, (50, 50))\n        self.spaceship_rect = self.spaceship_image.get_rect()\n        self.spaceship_rect.center = (WIDTH // 2, HEIGHT // 2)",
        "detail": "player",
        "documentation": {}
    },
    {
        "label": "enemy",
        "kind": 5,
        "importPath": "player",
        "description": "player",
        "peekOfCode": "enemy = rumia\nclass spaceship:\n    def __init__(self, x, y):\n        super().__init__()\n        self.rect = pygame.Rect(x, y, 50, 50)\n        self.spaceship_image = pygame.image.load(\"textures/spaceship.png\")\n        self.spaceship_image = pygame.transform.scale(self.spaceship_image, (50, 50))\n        self.spaceship_rect = self.spaceship_image.get_rect()\n        self.spaceship_rect.center = (WIDTH // 2, HEIGHT // 2)\n        self.bullet_speed = 25",
        "detail": "player",
        "documentation": {}
    }
]